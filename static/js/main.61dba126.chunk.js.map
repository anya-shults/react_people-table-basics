{"version":3,"sources":["App.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/HomePage/HomePage.tsx","components/Root/Root.tsx","index.tsx"],"names":["activeLink","isActive","cn","App","className","role","to","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeoplePage","useState","people","setPeople","error","setError","isLoading","setIsLoading","useParams","useEffect","catch","finally","preparedPeople","useMemo","map","mother","find","findPerson","motherName","father","fatherName","length","born","died","NotFoundPage","HomePage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.61dba126.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\n\nconst activeLink = ({ isActive }: { isActive: boolean }) => cn('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={activeLink} to=\"..\">\n              Home\n            </NavLink>\n\n            <NavLink className={activeLink} to=\"people\">\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <td>\n      <Link\n        to={person.slug}\n        className={cn({\n          'has-text-danger': person.sex === 'f',\n        })}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import React, {\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setError('');\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setError('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const preparedPeople = useMemo(() => (\n    people.map(person => {\n      const mother = people.find(findPerson => (\n        findPerson.name === person.motherName\n      ));\n\n      const father = people.find(findPerson => (\n        findPerson.name === person.fatherName\n      ));\n\n      return { ...person, mother, father };\n    })\n  ), [people]);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {!!error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !error && preparedPeople.length !== 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {preparedPeople.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={cn({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <PersonLink person={person} />\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    {person.mother\n                      ? (\n                        <PersonLink person={person.mother} />\n                      ) : (\n                        <td>\n                          {person.motherName || '-'}\n                        </td>\n                      )}\n\n                    {person.father\n                      ? (\n                        <PersonLink person={person.father} />\n                      ) : (\n                        <td>\n                          {person.fatherName || '-'}\n                        </td>\n                      )}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n\n          {!isLoading && !error && !preparedPeople.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from '../../App';\nimport { PeoplePage } from '../PeoplePage';\nimport { NotFoundPage } from '../NotFoundPage';\nimport { HomePage } from '../HomePage';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"home\" element={<Navigate to=\"..\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './components/Root';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}